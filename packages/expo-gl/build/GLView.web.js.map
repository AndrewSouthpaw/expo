{"version":3,"file":"GLView.web.js","sourceRoot":"","sources":["../src/GLView.web.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,WAAW,CAAC;AAClC,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD,SAAS,gBAAgB,CAAC,KAAiB;IACzC,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,aAAa,EAAE;QACtE,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;QACpB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,aAAa,CAAC,EAAyB;IAC9C,EAAE,CAAC,WAAW,GAAG,SAAS,aAAa,KAAU,CAAC,CAAC;IAEnD,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE;QACxB,EAAE,CAAC,gBAAgB,GAAG,EAAE,CAAC,UAAU,CAAC;QACpC,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,KAAK,EAAE,EAAE;YAC3B,IAAI,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YAC3B,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAClD,OAAO,EAAE,CAAC,gBAAgB,CAAC,GAAG,SAAS,CAAC,CAAC;QAC3C,CAAC,CAAC;KACH;IAED,IAAI,CAAC,EAAE,CAAC,mBAAmB,EAAE;QAC3B,EAAE,CAAC,mBAAmB,GAAG,EAAE,CAAC,aAAa,CAAC;QAC1C,EAAE,CAAC,aAAa,GAAG,CAAC,GAAG,KAAK,EAAE,EAAE;YAC9B,IAAI,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YAC3B,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAClD,OAAO,EAAE,CAAC,mBAAmB,CAAC,GAAG,SAAS,CAAC,CAAC;QAC9C,CAAC,CAAC;KACH;IAED,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAS,aAAa,CACpB,MAAyB,EACzB,iBAA0C;IAE1C,MAAM,OAAO,GACX,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,iBAAiB,CAAC;QAC9C,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,iBAAiB,CAAC;QAC7C,MAAM,CAAC,UAAU,CAAC,oBAAoB,EAAE,iBAAiB,CAAC;QAC1D,MAAM,CAAC,UAAU,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;IAC7D,SAAS,CAAC,OAAO,EAAE,gCAAgC,CAAC,CAAC;IACrD,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAK;IAC7B,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;QACvB,IAAI,CAAC,IAAI,KAAK,EAAE;YACd,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;SACjB;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,SAAS,GAAG;IAChB,eAAe,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU;IAC1C,iBAAiB,EAAE,SAAS,CAAC,IAAI;IACjC,aAAa,EAAE,SAAS,CAAC,IAAI;IAC7B,sBAAsB,EAAE,SAAS,CAAC,MAAM;IACxC,KAAK,EAAE,SAAS,CAAC,MAAM;CACxB,CAAC;AAeF,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,KAAK,CAAC,SAAuB;IAAjE;;QACE,UAAK,GAAG;YACN,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;SACV,CAAC;QAIF,2BAAsB,GAAG,KAAK,CAAC;QAkC/B,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACpE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9E,CAAC,CAAC;QAiBF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,MAAM,EAAE,WAAW,EAAE,KAAK,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC5E,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;QAaM,UAAK,GAAC,EAAC,KAAK,EAAoB,CAAA;QAChC,WAAM,GAAC,EAAC,MAAM,EAAoB,CAAA;IAClC,CAAC,AADiC;IAnE1C,MAAM,CAAC,KAAK,CAAC,kBAAkB;QAC7B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAC3D,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAC7D,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAqC;QACpE,aAAa;IACf,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAC5B,IAA2B,EAC3B,UAA2B,EAAE;QAE7B,SAAS,CAAC,IAAI,EAAE,mDAAmD,CAAC,CAAC;QACrE,MAAM,MAAM,GAAsB,IAAI,CAAC,MAAM,CAAC;QAC9C,OAAO,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9F,oCAAoC;QACpC,6DAA6D;IAC/D,CAAC;IAED,iBAAiB;QACf,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACvD,CAAC;IASD,oBAAoB;QAClB,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;YAClE,IAAI,cAAc,EAAE;gBAClB,cAAc,CAAC,WAAW,EAAE,CAAC;aAC9B;YACD,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;SAChB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACvE,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAChF;QACD,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3D,CAAC;IASD,MAAM;QACJ,MAAM,EAAE,gBAAgB,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC;QACxC,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACrC,MAAM,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,OACO,GAAG,GAAC,EAAC,IAAI,EAAA,CAAC,mBAAmB,EAAC,CAAA;QAAC,KAAK,GAAC,EAAC,UAAU,EAAA,EAAA,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAC;YAEhF,GAAG,CAAA;QAAC;YAAC,IAAI,CAAC,gBAAgB,CAAA;SAAC;QAC3B,KAAK,GAAC,EAAC,CAAA;QAAA;YAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAA;SAAE;IAAA,CAAC;;AA3EnC,gBAAS,GAAG,SAAS,CAAC;AA8ErB;IAAI,QAAQ,CAAA;CAAC;AACf,EAAE;MACH,KAAK,CAAA;AACP,CAAC;AAGJ,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;AAAC;IAClC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;QAC/C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;CACF;AAED,cAAc,EAAE,CAAA;AAAE,qBAAqB,CAAA;AAAC;IACtC,MAAM,EAAE,sBAAsB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;IAC9C,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IAC9D,IAAI,CAAC,uBAAuB,GAAG,sBAAsB,IAAI,EAAE,CAAC;IAC5D,OAAO,EAAE,CAAC;CACX;AAED,YAAY,GAAG,CAAC,KAAY,EAAE,EAAE;IAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;IACf,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;QAC5B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;KAC5B;AACH,CAAC,CAAC;AAEF,gBAAgB,GAAG,GAAG,EAAE;IACtB,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;QAChC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACvC;AACH,CAAC,CAAC;AAEF,gBAAgB,GAAG,CAAC,MAAyB,EAAE,EAAE;IAC/C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,CAAC,CAAC;AAEF,mBAAmB,GAAG,CAAC,OAAoB,EAAE,EAAE;IAC7C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;IACzB,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,CAAC,CAAC;AAEF,KAAK,CAAA;AAAC,mBAAmB,EAAE,CAAA;AAAE,OAAO,GAAC,KAAI,GAAE;IACzC,KAAK,EAAC,IAAI,mBAAmB,CAAC,QAAQ,EAAE,qBAAqB,CAAC;CAC/D,CAAA;AAED,KAAK,CAAA;AAAC,wBAAwB,EAAE,CAAA;AAAE,OAAO,GAAC,KAAI,GAAE;IAC9C,KAAK,EAAC,IAAI,mBAAmB,CAAC,QAAQ,EAAE,0BAA0B,CAAC;CACpE,CAAA;AAED,KAAK,CAAA;AAAC,kBAAkB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAA;AAAE,OAAO,GAAC,KAAI,GAAE;IAC7D,KAAK,EAAC,IAAI,mBAAmB,CAAC,QAAQ,EAAE,oBAAoB,CAAC;CAC9D,CAAA","sourcesContent":["import invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { UnavailabilityError } from 'expo-errors';\n\nfunction getImageForAsset(asset: any | null): any {\n  if (asset == null) {\n    return null;\n  }\n\n  if (typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri;\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction asExpoContext(gl: WebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl._expo_texImage2D) {\n    gl._expo_texImage2D = gl.texImage2D;\n    gl.texImage2D = (...props) => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl._expo_texImage2D(...nextProps);\n    };\n  }\n\n  if (!gl._expo_texSubImage2D) {\n    gl._expo_texSubImage2D = gl.texSubImage2D;\n    gl.texSubImage2D = (...props) => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl._expo_texSubImage2D(...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  const context =\n    canvas.getContext('webgl2', contextAttributes) ||\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context);\n}\n\nfunction stripNonDOMProps(props): any {\n  for (let k in propTypes) {\n    if (k in props) {\n      delete props[k];\n    }\n  }\n  return props;\n}\n\nconst propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func,\n  onContextLost: PropTypes.func,\n  webglContextAttributes: PropTypes.object,\n  style: PropTypes.object,\n};\n\ntype Props = {\n  onContextCreate: (gl: WebGLRenderingContext) => void,\n  onContextRestored: (gl: ?WebGLRenderingContext) => void,\n  onContextLost: () => void,\n  webglContextAttributes?: WebGLContextAttributes,\n  pixelRatio?: number,\n  style?: any,\n};\n\ntype State = {\n  width: number,\n  height: number,\n};\nexport default class GLView extends React.Component<Props, State> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  static propTypes = propTypes;\n\n  _hasContextBeenCreated = false;\n\n  _webglContextAttributes: WebGLContextAttributes | undefined;\n\n  canvas: HTMLCanvasElement | undefined;\n\n  gl: WebGLRenderingContext | undefined;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext> {\n    const canvas = document.createElement('canvas');\n    canvas.width = window.innerWidth * window.devicePixelRatio;\n    canvas.height = window.innerHeight * window.devicePixelRatio;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl: WebGLRenderingContext | ?number): Promise<void> {\n    // Do nothing\n  }\n\n  static async takeSnapshotAsync(\n    exgl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<void> {\n    invariant(exgl, 'GLView.takeSnapshotAsync(): canvas is not defined');\n    const canvas: HTMLCanvasElement = exgl.canvas;\n    return await new Promise(resolve => canvas.toBlob(resolve, options.format, options.compress));\n    //TODO:Bacon: Should we add data URI\n    // return canvas.toDataURL(options.format, options.compress);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateLayout);\n  }\n\n  _contextCreated = () => {\n    this.gl = this._createContext();\n    this.props.onContextCreate(this.gl);\n    this.canvas.addEventListener('webglcontextlost', this._contextLost);\n    this.canvas.addEventListener('webglcontextrestored', this._contextRestored);\n  };\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = null;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this._contextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this._contextRestored);\n    }\n    window.removeEventListener('resize', this._updateLayout);\n  }\n\n  _updateLayout = () => {\n    if (this.container) {\n      const { clientWidth: width = 0, clientHeight: height = 0 } = this.container;\n      this.setState({ width, height });\n    }\n  };\n\n  render() {\n    const { devicePixelRatio = 1 } = window;\n    const { style, ...props } = this.props;\n    const { width, height } = this.state;\n    const domProps = stripNonDOMProps(props);\n\n    return (\n      <div ref={this._assignContainerRef} style={StyleSheet.flatten([{ flex: 1 }, style])}>\n        <canvas\n          ref={this._assignCanvasRef}\n          style={{ flex: 1, width, height }}\n          width={width * devicePixelRatio}\n          height={height * devicePixelRatio}\n          {...domProps}\n        />\n      </div>\n    );\n  }\n\n  componentDidUpdate(prev, prevState) {\n    if (this.canvas && !this._hasContextBeenCreated) {\n      this._hasContextBeenCreated = true;\n      this._contextCreated();\n    }\n  }\n\n  _createContext(): WebGLRenderingContext {\n    const { webglContextAttributes } = this.props;\n    const gl = ensureContext(this.canvas, webglContextAttributes);\n    this._webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _contextLost = (event: Event) => {\n    event.preventDefault();\n    this.gl = null;\n    if (this.props.onContextLost) {\n      this.props.onContextLost();\n    }\n  };\n\n  _contextRestored = () => {\n    if (this.props.onContextRestored) {\n      this.gl = this._createContext();\n      this.props.onContextRestored(this.gl);\n    }\n  };\n\n  _assignCanvasRef = (canvas: HTMLCanvasElement) => {\n    this.canvas = canvas;\n  };\n\n  _assignContainerRef = (element: HTMLElement) => {\n    this.container = element;\n    this._updateLayout();\n  };\n\n  async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"]}